{"version":3,"sources":["component/Todo.js","component/CreateDay.js","App.js","serviceWorker.js","index.js"],"names":["Todo","delete","len","x","console","log","string","state","arr2","State","handleSubmit1","event","length","push","todo","setState","list","id","preventDefault","handleChange1","target","value","onSubmit","this","style","textAlign","type","onChange","margin","Component","CreatDay","handleChange","date","handleSubmit","arr","className","borderStyle","padding","day","note","note1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.9d4cf59f.chunk.js","sourcesContent":["import React, {Component} from \"react\"\r\n\r\n\r\nclass Todo extends Component{\r\nconstructor(){\r\n    super()\r\nthis.state ={todo:\" \",arr2:[],list:\" \"\r\n}\r\n}\r\n\r\n// delete(x){\r\n//    const y = x.len\r\n//    console.log(y)\r\n//   const ar = this.state.arr2[y]\r\n//   console.log(ar) \r\n//   ar\r\n// }\r\n\r\ndelete = len => {\r\n    const x=len.len\r\n    console.log(x)\r\n    const string = this.state.arr2[x]\r\n    console.log(string)\r\n    this.State.arr2[x]=<strike>{this.state.arr2[x]}</strike>; \r\n  };\r\nhandleSubmit1=(event)=>{\r\n    const len = this.state.arr2.length\r\n    console.log(len)\r\n// this.state.arr2.push(<li id ={len}>{this.state.todo} <button onClick={()=>this.delete({len})}>Strike</button></li>)\r\nthis.state.arr2.push(this.state.todo)\r\nthis.setState ({list:<li id ={len}>{this.state.arr2} </li>})  \r\nthis.setState ({todo:\" \" })  \r\nevent.preventDefault();\r\n    }\r\n\r\n\r\n\r\nhandleChange1 =(event) =>{\r\n    this.setState({todo: event.target.value});\r\n    console.log(this.state.todo)}\r\n\r\nrender() {\r\n    return (<div><form onSubmit={this.handleSubmit1} style={{textAlign:\"center\"}}>\r\n    <input id=\"txt\"  type=\"text\"    value={this.state.todo} onChange={this.handleChange1} style={{textAlign:\"center\", margin:\"1%\"}}></input>\r\n    <input type=\"submit\" value =\"Add\"style={{textAlign:\"center\", margin:\"1%\"}} />\r\n       </form>\r\n      {this.state.todo}\r\n<div><ul>{this.state.list}\r\n    </ul>\r\n    </div>\r\n   </div>)\r\n}}\r\n\r\nexport default Todo;","import React, {Component} from \"react\"\r\nimport Todo from \"./Todo\"\r\n\r\nclass CreatDay extends Component{\r\nconstructor(){\r\n    super()\r\nthis.state ={day :[(<div></div>)],date: \" \",todo: \" \",\r\n note:[(<div></div>)], note1:[(<div></div>)], arr:[],\r\n}\r\n \r\n\r\n}\r\n\r\nhandleChange =(event) =>{\r\n  this.setState({date: event.target.value});\r\n  console.log(this.state.date)\r\n//   this.setState({note:[(<div>{this.state.day}\r\n// </div>)]})\r\n\r\n}\r\n// handleSubmit1=(event)=>{}\r\nhandleSubmit=(event)=>{\r\n  this.state.arr.push(<div className=\"col-md-3\" style ={{borderStyle: \"double\", padding :\"1%\"}}>\r\n    <div style={{textAlign:\"center\"}}>{this.state.date}</div>\r\n    \r\n    \r\n<Todo/>\r\n\r\n    </div>)\r\n  console.log(this.state)\r\n \r\nthis.setState ({day:this.state.arr\r\n//  <div className=\"row\" style={{marginLeft:\"0%\",marginRight:\"0%\"}}>{this.state.note}<div>\r\n// <div style ={{borderStyle: \"double\", padding :\"1%\"}}>{this.state.date} <button style ={{marginLeft :\"2%\"}}>Remove</button></div>\r\n//  </div>\r\n// </div> \r\n})  \r\nevent.preventDefault();\r\n\r\n}\r\n\r\n\r\n\r\nrender() {\r\n return (<div><form onSubmit={this.handleSubmit} style={{textAlign:\"center\"}}><p style={{textAlign:\"center\", margin:\"2%\"}}> Enter the Date :</p>\r\n  <input  type=\"date\"    value={this.state.date} onChange={this.handleChange} style={{textAlign:\"center\", margin:\"1%\"}}></input>\r\n  <input type=\"submit\" value =\"Add\"style={{textAlign:\"center\", margin:\"1%\"}} />\r\n     </form>\r\n\r\n     <div className =\"row\" style={{margin:\"2%\"}}>\r\n       \r\n       {this.state.day}\r\n      \r\n     </div>\r\n    \r\n </div>)\r\n\r\n }}\r\n\r\nexport default CreatDay;","import React from 'react';\nimport './App.css';\nimport CreatDay from './component/CreateDay';\n\nfunction App() {\n  return (\n    <div className=\"container-fluid\">\n     <div>\n       <h1 style={{textAlign:\"center\", margin:\"2%\"}}>Daily Planner</h1>\n     </div>\n     <div><CreatDay /></div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport Day from './component/CreateDay';\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}